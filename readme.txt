1. Проект создан на основе Create-react-app;
2. Сперва необходимо установить все пакеты командой npm install'
3. Затем запускаем командой npm start'
4. Главной страницей по умолчанию являеьтся страница сзаявками - /tasks'
5. При попдании на эту страницу происходят 4 запроса:
  - Первый: получение самих заявок;
  - Остальные три получаем и записываем в локальное хранилище: приоритеты, статусы, и пользователи.
6. При нажатии на кнопку "Создать заявку", открывается соответствующая форма:
  - Если заявка успешно создается (post запрос успешно отправлен на сервер), происходит переход к форме редактирования заявки (get запрос только что созданной заявки);
  - Если произошла ошибка post запроса, то выходит ошибка визуально на данной форме.
7. Форма редактирования заявки появляется при нажатии на определенную запись в таблице, либо после успешного создания заявки:
  - На ней можно изменить статус и испольнителя, а также добавить комментарий;
  - После нажатия на кнопку "Сохранить", происходит сперва put запрос, а затем get запрос данной заявки и get запрос всех заявок
    для отражения изменений в таблице и в самой форме редактирования текущей заявки;
  - При успешном или ошибочном сценарии выходят соответствующие сообщения визуально.
8. Для управления глобальным состоянием использовал библиотеку Redux на основе практик Redux-Toolkit:
  - Использовал данную библиотеку для работы с заявками, включая и асинхронные запросы;
  - Логика остальных запросов напрямую написана на основе кастомных хуков (приоритеты, статусы, и пользователи).

Некоторые мысли:
- Я не ориентировался на адаптацию верстки под мобильные экраны;
- Попробовал проанализировать код и понять где использовать useMemo, useCallback, или React.memo, но не обнаружил.
  Честно говоря, никогда не пользовалься данными инструментами для оптимизации некоторых операций. Понимаю для чего они нужны,
  но, затрудняет Redux загоняет в тупик, т.к. тут мало где пропсы прокидываешь и непонятно когда лучше воспользоваться тем, что перечисилил выше.
  Если у вас получилось бы на каком-нибудь примере из моего кода показать где такое можно провернуть, то был бы признателен;
- Если из требований что-то упустил, то я исправлю.